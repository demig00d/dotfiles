# vim:fileencoding=utf-8:ft=conf:foldmethod=marker

#: Fonts {{{

#: kitty has very powerful font management. You can configure
#: individual font faces and even specify special fonts for particular
#: characters.
font_family Iosevka SS14
bold_font Iosevka Fixed SS14 Semibold
italic_font Iosevka Fixed SS14 Italic
bold_italic_font Iosevka Fixed SS14 Semibold Italic
# discretionary ligatures, less weird %
font_features Iosevka +dlig cv93=3

font_size 15
adjust_line_height 1

# "Nerd Fonts - Pomicons"
symbol_map  U+E000-U+E00D Iosevka Nerd Font

# "Nerd Fonts - Powerline"
symbol_map U+e0a0-U+e0a2,U+e0b0-U+e0b3 Iosevka Nerd Font

# "Nerd Fonts - Powerline Extra"
symbol_map U+e0a3-U+e0a3,U+e0b4-U+e0c8,U+e0cc-U+e0d2,U+e0d4-U+e0d4 Iosevka Nerd Font

# "Nerd Fonts - Symbols original"
symbol_map U+e5fa-U+e62b Iosevka Nerd Font

# "Nerd Fonts - Devicons"
symbol_map U+e700-U+e7c5 Iosevka Nerd Font

# "Nerd Fonts - Font awesome"
symbol_map U+f000-U+f2e0 Iosevka Nerd Font

# "Nerd Fonts - Font awesome extension"
symbol_map U+e200-U+e2a9 Iosevka Nerd Font

# "Nerd Fonts - Octicons"
symbol_map U+f400-U+f4a8,U+2665-U+2665,U+26A1-U+26A1,U+f27c-U+f27c Iosevka Nerd Font

# "Nerd Fonts - Font Linux"
symbol_map U+F300-U+F313 Iosevka Nerd Font

#  Nerd Fonts - Font Power Symbols"
symbol_map U+23fb-U+23fe,U+2b58-U+2b58 Iosevka Nerd Font

#  "Nerd Fonts - Material Design Icons"
symbol_map U+f500-U+fd46 Iosevka Nerd Font

# "Nerd Fonts - Weather Icons"
symbol_map U+e300-U+e3eb Iosevka Nerd Font

# Misc Code Point Fixes
symbol_map U+21B5,U+25B8,U+2605,U+2630,U+2632,U+2714,U+E0A3,U+E615,U+E62B Iosevka Nerd Font
# url_color #0087bd
url_style curly

#: The color and style for highlighting URLs on mouse-over. url_style
#: can be one of: none, single, double, curly


allow_remote_control=yes 
open_url_with none # default
hide_window_decorations yes
# remember_window_size yes
initial_window_width  880
initial_window_height 580
enabled_layouts tall:bias=30
#: enabled_layouts vertical
tab_powerline_style angled
# tab_activity_symbol none
tab_title_template      {index}: {title}
# map kitty_mod+c copy_to_clipboard
# map kitty_mod+v paste_from_clipboard
# map kitty_mod+s paste_from_selection
# map kitty_mod+o pass_selection_to_program
#
# map kitty_mod+enter    launch --cwd=current

# map kitty_mod+w close_window
map alt+; next_window
map alt+j previous_window
# map kitty_mod+f move_window_forward
# map kitty_mod+b move_window_backward
# map kitty_mod+` move_window_to_top
# map kitty_mod+r start_resizing_window
# map kitty_mod+1 first_window
# map kitty_mod+2 second_window
# map kitty_mod+3 third_window
# map kitty_mod+4 fourth_window
# map kitty_mod+5 fifth_window
# map kitty_mod+6 sixth_window
# map kitty_mod+7 seventh_window
# map kitty_mod+8 eighth_window
# map kitty_mod+9 ninth_window
# map kitty_mod+0 tenth_window
#: }}}
#: Tab management {{{

# map kitty_mod+right next_tab
# map kitty_mod+left  previous_tab
# map kitty_mod+t     new_tab
# map kitty_mod+q     close_tab
# map shift+cmd+w     close_os_window
# map kitty_mod+.     move_tab_forward
# map kitty_mod+,     move_tab_backward
# map kitty_mod+alt+t set_tab_title

#: You can also create shortcuts to go to specific tabs, with 1 being
#: the first tab, 2 the second tab and -1 being the previously active
#: tab, and any number larger than the last tab being the last tab::

#:     map ctrl+alt+1 goto_tab 1
#:     map ctrl+alt+2 goto_tab 2

#: Just as with new_window above, you can also pass the name of
#: arbitrary commands to run when using new_tab and use
#: new_tab_with_cwd. Finally, if you want the new tab to open next to
#: the current tab rather than at the end of the tabs list, use::

#:     map ctrl+t new_tab !neighbor [optional cmd to run]
#: }}}

